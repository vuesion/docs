(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{327:function(e,t,n){"use strict";n.r(t);var a=n(10),r=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"concepts"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#concepts"}},[e._v("#")]),e._v(" Concepts")]),e._v(" "),t("h2",{attrs:{id:"flux-architecture"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flux-architecture"}},[e._v("#")]),e._v(" Flux Architecture")]),e._v(" "),t("p",[e._v("Flux is an architectural pattern used for building client-side web applications.\nIt emphasizes unidirectional data flow, making the state management of the application more predictable.\nIn Flux, actions are dispatched to a central dispatcher, which then updates the stores that hold the\napplication's state. The views listen to these stores and re-render when the state changes.\nThis pattern helps manage complex applications by decoupling different parts of the application and\nmaking the data flow more transparent and easier to debug.")]),e._v(" "),t("p",[e._v("Read more about Flux "),t("a",{attrs:{href:"https://www.freecodecamp.org/news/an-introduction-to-the-flux-architectural-pattern-674ea74775c9/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("mermaid",[e._v("\nflowchart LR\n    View((View)) -- dispatch --\x3e Action\n    Action((Action)) -- mutate --\x3e State\n    State((State)) -- render --\x3e View\n")]),e._v(" "),t("p",[e._v("For a concrete implementation in Vuesion, we use "),t("a",{attrs:{href:"https://pinia.vuejs.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pinia"),t("OutboundLink")],1),e._v(",\na state management library for Vue.js that follows the Flux architecture principles.")]),e._v(" "),t("h2",{attrs:{id:"developing-re-usable-components"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#developing-re-usable-components"}},[e._v("#")]),e._v(" Developing Re-usable Components")]),e._v(" "),t("p",[e._v("Creating reusable components is crucial for maintaining a clean and efficient codebase.\nReusable components help in reducing redundancy, enhancing consistency across the application,\nand making the development process faster and more manageable.")]),e._v(" "),t("h3",{attrs:{id:"container-presentational-pattern"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#container-presentational-pattern"}},[e._v("#")]),e._v(" Container/Presentational Pattern")]),e._v(" "),t("p",[e._v("The Container/Presentational pattern is a design pattern that separates components into two categories:")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("Presentational Components")]),e._v(": Focus on how things look. They exclusively receive data and emit events.")]),e._v(" "),t("li",[t("strong",[e._v("Container Components")]),e._v(": Focus on how things work. They provide the data and behavior to presentational components or other container components.")])]),e._v(" "),t("p",[e._v("This pattern enhances the separation of concerns and makes components more reusable and easier to test.")]),e._v(" "),t("p",[e._v("Read more about the Container/Presentational pattern "),t("a",{attrs:{href:"https://www.patterns.dev/react/presentational-container-pattern/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h3",{attrs:{id:"storybook"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#storybook"}},[e._v("#")]),e._v(" Storybook")]),e._v(" "),t("p",[e._v("Storybook is an open-source tool for developing UI components in isolation.\nIt allows developers to create and test components independently from the main application,\nwhich improves the development workflow by making it easier to spot issues and iterate on components.\nBenefits of using Storybook include:")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("Isolation")]),e._v(": Work on one component at a time.")]),e._v(" "),t("li",[t("strong",[e._v("Documentation")]),e._v(": Automatically generate a living style guide.")]),e._v(" "),t("li",[t("strong",[e._v("Testing")]),e._v(": Test components in various states and edge cases.")])]),e._v(" "),t("p",[e._v("Read more about Storybook "),t("a",{attrs:{href:"https://storybook.js.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"service-repository-pattern"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#service-repository-pattern"}},[e._v("#")]),e._v(" Service Repository Pattern")]),e._v(" "),t("p",[e._v("The Service Repository Pattern separates the logic for retrieving data from the logic for processing that data.\nIt involves creating repositories to handle data access and services to handle business logic.")]),e._v(" "),t("p",[e._v("In Vuesion, Prisma acts as the repository, handling database operations.\nServices are manually created in "),t("code",[e._v("./src/server/services")]),e._v(" to encapsulate business logic.\nUsing a code generator can streamline this process: "),t("code",[e._v("npm run new:rest-api")]),e._v(".")]),e._v(" "),t("p",[e._v("Read more about the Service Repository Pattern "),t("a",{attrs:{href:"https://medium.com/@ankitpal181/service-repository-pattern-802540254019",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"unit-testing-with-the-testing-library"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unit-testing-with-the-testing-library"}},[e._v("#")]),e._v(" Unit Testing with the Testing Library")]),e._v(" "),t("p",[e._v("The Testing Library is a set of tools for testing UI components in a way that resembles how users interact with them.\nIt encourages testing best practices by focusing on accessibility and avoiding implementation details.\nBenefits include:")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("User-centric testing")]),e._v(": Test components from the user's perspective.")]),e._v(" "),t("li",[t("strong",[e._v("Less brittle tests")]),e._v(": Write more maintainable tests that are less prone to breaking due to changes in implementation details.")])]),e._v(" "),t("p",[e._v("Read more about the Testing Library "),t("a",{attrs:{href:"https://testing-library.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(".")]),e._v(" "),t("h2",{attrs:{id:"e2e-testing-with-cypress-io"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#e2e-testing-with-cypress-io"}},[e._v("#")]),e._v(" E2E Testing with Cypress.io")]),e._v(" "),t("p",[e._v("Cypress.io is an end-to-end testing framework designed for modern web applications.\nIt provides a robust environment for writing, running, and debugging tests,\nensuring that the entire application works as expected.\nBenefits of using Cypress.io include:")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("Real-time reloads")]),e._v(": Automatically reloads tests as you make changes.")]),e._v(" "),t("li",[t("strong",[e._v("Time travel")]),e._v(": See exactly what happened at each step in your tests.")]),e._v(" "),t("li",[t("strong",[e._v("Debugging")]),e._v(": Powerful tools for debugging tests directly in the browser.")])]),e._v(" "),t("p",[e._v("Read more about Cypress.io "),t("a",{attrs:{href:"https://www.cypress.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),t("OutboundLink")],1),e._v(".")])],1)}),[],!1,null,null,null);t.default=r.exports}}]);