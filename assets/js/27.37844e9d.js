(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{442:function(e,t,s){"use strict";s.r(t);var n=s(62),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"deploy-with-firebase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deploy-with-firebase"}},[e._v("#")]),e._v(" Deploy with Firebase")]),e._v(" "),s("h2",{attrs:{id:"single-page-application"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#single-page-application"}},[e._v("#")]),e._v(" Single Page Application")]),e._v(" "),s("p",[e._v("This is a straightforward process. It only uses Firebase Hosting. You will need an existing Firebase project, or you will need to create one using the Firebase CLI.")]),e._v(" "),s("h3",{attrs:{id:"step-1-setup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-1-setup"}},[e._v("#")]),e._v(" Step 1: setup")]),e._v(" "),s("p",[s("code",[e._v("% npx @vuesion/create vuesion-firebase-spa")]),s("br"),e._v(" "),s("code",[e._v("% cd vuesion-firebase-spa")]),e._v("\\")]),e._v(" "),s("p",[e._v("If you don't already have the Firebase CLI installed: "),s("code",[e._v("% npm install -g firebase-tools")])]),e._v(" "),s("h3",{attrs:{id:"step-2-initialize-firebase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-2-initialize-firebase"}},[e._v("#")]),e._v(" Step 2: initialize Firebase")]),e._v(" "),s("p",[s("code",[e._v("% firebase init")])]),e._v(" "),s("p",[e._v("Select "),s("code",[e._v("Hosting")]),e._v(", select your project, say "),s("code",[e._v("Yes")]),e._v(" to configure your project as a single-page app and specify "),s("code",[e._v("dist")]),e._v(" as your public directory. Shown below is an example of this process.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("     ######## #### ########  ######## ########     ###     ######  ########\n     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##\n     ######    ##  ########  ######   ########  #########  ######  ######\n     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##\n     ##       #### ##     ## ######## ########  ##     ##  ######  ########\n\nYou're about to initialize a Firebase project in this directory:\n\n  /example/path/vuesion-firebase-spa\n\n? Which Firebase CLI features do you want to set up for this folder? Press Space to select features, then Enter to con\nfirm your choices. Hosting: Configure and deploy Firebase Hosting sites\n\n=== Project Setup\n\nFirst, let's associate this project directory with a Firebase project.\nYou can create multiple project aliases by running firebase use --add,\nbut for now we'll just set up a default project.\n\n? Please select an option: Use an existing project\n? Select a default Firebase project for this directory: example-12345 (example)\ni  Using project example-12345 (reclaim)\n\n=== Hosting Setup\n\nYour public directory is the folder (relative to your project directory) that\nwill contain Hosting assets to be uploaded with firebase deploy. If you\nhave a build process for your assets, use your build's output directory.\n\n? What do you want to use as your public directory? dist\n? Configure as a single-page app (rewrite all urls to /index.html)? Yes\n✔  Wrote dist/index.html\n\ni  Writing configuration info to firebase.json...\ni  Writing project information to .firebaserc...\n\n✔  Firebase initialization complete!\n")])])]),s("h3",{attrs:{id:"step-3-test-locally"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-3-test-locally"}},[e._v("#")]),e._v(" Step 3: test locally")]),e._v(" "),s("p",[s("code",[e._v("% npm install")]),s("br"),e._v(" "),s("code",[e._v("% npm run build:spa")]),s("br"),e._v(" "),s("code",[e._v("% firebase serve")]),e._v(" serves your app at http://localhost:5000")]),e._v(" "),s("h3",{attrs:{id:"step-4-deploy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-4-deploy"}},[e._v("#")]),e._v(" Step 4: deploy")]),e._v(" "),s("p",[e._v("Set the API base url in src/app/config/production.json to the url where your app will be hosted.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('{\n  "api": {\n    "baseUrl": "<your-project-url-here>"\n  }\n}\n')])])]),s("p",[s("code",[e._v("% firebase deploy")]),e._v(" deploys your app at the url specified by your Firebase project")]),e._v(" "),s("h2",{attrs:{id:"universal-ssr-application"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#universal-ssr-application"}},[e._v("#")]),e._v(" Universal/SSR Application")]),e._v(" "),s("p",[e._v("This will require Firebase Hosting and Firebase Functions. Firebase Hosting will redirect requests to your url to a Firebase function which will run your application.")]),e._v(" "),s("p",[e._v("You will need an existing Firebase project, or you will need to create one using the Firebase CLI.")]),e._v(" "),s("h3",{attrs:{id:"step-1-create-new-project"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-1-create-new-project"}},[e._v("#")]),e._v(" Step 1: create new project")]),e._v(" "),s("p",[s("code",[e._v("% npx @vuesion/create vuesion-firebase-ssr")]),s("br"),e._v(" "),s("code",[e._v("% cd vuesion-firebase-ssr")])]),e._v(" "),s("p",[e._v("If you don't already have the Firebase CLI installed: "),s("code",[e._v("% npm install -g firebase-tools")])]),e._v(" "),s("h3",{attrs:{id:"step-2-firebase-init-hosting-and-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-2-firebase-init-hosting-and-functions"}},[e._v("#")]),e._v(" Step 2: firebase init hosting and functions")]),e._v(" "),s("p",[s("code",[e._v("% firebase init")])]),e._v(" "),s("blockquote",[s("p",[e._v("select functions and hosting"),s("br"),e._v("\nchoose your firebase project or create a new one"),s("br"),e._v("\nchoose typescript"),s("br"),e._v("\n(optional) say yes to using TSLint"),s("br"),e._v("\n(optional) say yes to install dependencies now"),s("br"),e._v("\nspecify dist/client as your public directory"),s("br"),e._v("\nsay yes to configuring your app as a single-page app")])]),e._v(" "),s("h3",{attrs:{id:"step-3-set-firebase-json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-3-set-firebase-json"}},[e._v("#")]),e._v(" Step 3: set firebase.json")]),e._v(" "),s("p",[e._v("Function stays pointing to the default location, /functions"),s("br"),e._v("\nHosting rewrites all urls to the result of passing that url into the vuesionApp export from functions. We will define that in functions/src/index.ts in Step 5.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('{\n  "functions": {\n    "predeploy": [\n      "npm --prefix \\"$RESOURCE_DIR\\" run lint",\n      "npm --prefix \\"$RESOURCE_DIR\\" run build"\n    ]\n  },\n  "hosting": {\n    "public": "dist",\n    "ignore": [\n      "firebase.json",\n      "**/.*",\n      "**/node_modules/**"\n    ],\n    "rewrites": [\n      {\n        "source": "**",\n        "function": "vuesionApp"\n      }\n    ]\n  }\n}\n')])])]),s("h3",{attrs:{id:"step-4-adjust-config-files-in-functions-folder"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-4-adjust-config-files-in-functions-folder"}},[e._v("#")]),e._v(" Step 4: adjust config files in functions folder")]),e._v(" "),s("h4",{attrs:{id:"adjust-functions-package-json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adjust-functions-package-json"}},[e._v("#")]),e._v(" Adjust /functions/package.json")]),e._v(" "),s("p",[e._v("Add production dependencies from package.json to functions/package.json and bring typescript version up to match package.json. Also add a prebuild script to copy /dist, /.vuesion, and /i18n into /functions")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('{\n  "name": "functions",\n  "scripts": {\n    "lint": "tslint --project tsconfig.json",\n    "prebuild": "rm -rf ./dist ./.vuesion ./i18n && cp -rf ../dist ./dist && cp -rf ../.vuesion ./.vuesion && cp -rf ../i18n ./i18n",\n    "build": "tsc",\n    "serve": "npm run build && firebase serve --only functions",\n    "shell": "npm run build && firebase functions:shell",\n    "start": "npm run shell",\n    "deploy": "firebase deploy --only functions",\n    "logs": "firebase functions:log"\n  },\n  "engines": {\n    "node": "8"\n  },\n  "main": "lib/index.js",\n  "dependencies": {\n    "firebase-admin": "^8.0.0",\n    "firebase-functions": "^3.1.0",\n    "@vuesion/addon-vuex-persist": "^3.1.1",\n    "@vuesion/models": "^3.1.1",\n    "@vuesion/utils": "^3.1.1",\n    "@vuesion/webpack": "^3.1.1",\n    "accept-language": "3.0.18",\n    "animejs": "3.1.0",\n    "axios": "^0.19.0",\n    "body-parser": "1.19.0",\n    "compression": "1.7.4",\n    "config": "3.2.2",\n    "cookie-parser": "1.4.4",\n    "deepmerge": "4.0.0",\n    "express": "4.17.1",\n    "helmet": "3.21.1",\n    "lodash": "4.17.15",\n    "lru-cache": "5.1.1",\n    "marked": "0.7.0",\n    "serve-favicon": "2.5.0",\n    "vee-validate": "2.0.9",\n    "vue": "^2.6.10",\n    "vue-i18n": "8.14.1",\n    "vue-meta": "2.2.2",\n    "vue-router": "^3.1.3",\n    "vue-server-renderer": "^2.6.10",\n    "vuex": "^3.1.1",\n    "vuex-router-sync": "^5.0.0",\n    "winston": "3.2.1"\n  },\n  "devDependencies": {\n    "tslint": "^5.12.0",\n    "typescript": "3.6.3"\n  },\n  "private": true\n}\n')])])]),s("h4",{attrs:{id:"adjust-functions-tsconfig-json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adjust-functions-tsconfig-json"}},[e._v("#")]),e._v(" Adjust functions/tsconfig.json")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('{\n  "extends": "../tsconfig.json",\n  "compilerOptions": {\n    "module": "commonjs",\n    "outDir": "lib"\n  },\n  "compileOnSave": true,\n  "include": ["src"]\n}\n')])])]),s("h4",{attrs:{id:"adjust-functions-tslint-json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#adjust-functions-tslint-json"}},[e._v("#")]),e._v(" Adjust functions/tslint.json")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('{\n  "extends": "../tslint.json"\n}\n')])])]),s("h3",{attrs:{id:"step-5-set-functions-src-index-ts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-5-set-functions-src-index-ts"}},[e._v("#")]),e._v(" Step 5: set functions/src/index.ts")]),e._v(" "),s("p",[e._v("This loads in the 'app' export from src/server/server.ts and makes it accessible via the export of vuesionApp (which Firebase hosting will be looking for to rewrite urls). Note we are setting the hosting environment variable to 'firebase-functions'. Thanks to the code we will write in /src/server/index.ts, this will ensure we don't have multiple processes running on port 3000 when serving with firebase locally.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("import * as functions from 'firebase-functions';\n\nprocess.env.hosting = 'firebase-functions';\n\nconst app = require('../dist/server/server').app;\nexports.vuesionApp = functions.https.onRequest(app);\n")])])]),s("h3",{attrs:{id:"step-6-adjust-the-root-s-package-json"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-6-adjust-the-root-s-package-json"}},[e._v("#")]),e._v(" Step 6: adjust the root's package.json")]),e._v(" "),s("p",[e._v("Here we will modify the build script for the project in package.json to also build /functions.\nWe will similarly add a "),s("code",[e._v("postinstall")]),e._v(" script to run "),s("code",[e._v("npm install")]),e._v(" in the /functions folder.\nAlso, since the rest of our app has been built for development on port 3000, we will create a short cut, "),s("code",[e._v("npm run firebase:serve")]),e._v(" for serving firebase on port 3000.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('"build": "vuesion build && cd ./functions && npm run build",\n...\n"postinstall": "cd ./functions && npm i",\n"firebase:serve": "firebase serve -p 3000"\n')])])]),s("h3",{attrs:{id:"step-7-adjust-src-server-index-ts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-7-adjust-src-server-index-ts"}},[e._v("#")]),e._v(" Step 7: adjust /src/server/index.ts")]),e._v(" "),s("p",[e._v("For serving with Firebase locally we need to ensure multiple processes don't try to listen on port 3000. So we will make sure the "),s("code",[e._v("hosting")]),e._v(" environment variable isn't set to 'firebase-functions'. Also, notice the export statement. This is necessary to make the server app available to functions/src/index.ts.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("import http from 'http';\nimport { Logger } from './utils/Logger';\nimport { app } from './server';\nexport * from './server';\n\nif (process.env.hosting !== 'firebase-functions') {\n  const server = http.createServer(app);\n  const port: string = process.env.PORT || '3000';\n  let currentApp = app;\n  server.listen(port, () => {\n    Logger.info(`server started at http://localhost:${port}`);\n  });\n  if (module.hot) {\n    module.hot.accept('./server', () => {\n      server.removeListener('request', currentApp);\n      server.on('request', app);\n      currentApp = app;\n    });\n  }\n}\n")])])]),s("h3",{attrs:{id:"step-8-test-locally"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-8-test-locally"}},[e._v("#")]),e._v(" Step 8: test locally")]),e._v(" "),s("p",[e._v("From the root of your project:"),s("br"),e._v(" "),s("code",[e._v("$ npm install")]),s("br"),e._v(" "),s("code",[e._v("$ npm run build")]),s("br"),e._v(" "),s("code",[e._v("$ npm run firebase:serve")])]),e._v(" "),s("p",[e._v("Your app is now available at http://localhost:3000")]),e._v(" "),s("h3",{attrs:{id:"step-9-deploy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-9-deploy"}},[e._v("#")]),e._v(" Step 9: deploy")]),e._v(" "),s("p",[e._v("Set the API base url in src/app/config/production.json to the url where your app will be hosted.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('{\n  "api": {\n    "baseUrl": "<your-project-url-here>"\n  }\n}\n')])])]),s("p",[s("code",[e._v("% firebase deploy")])]),e._v(" "),s("h3",{attrs:{id:"step-10-optional-adjust-the-gitignores"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#step-10-optional-adjust-the-gitignores"}},[e._v("#")]),e._v(" Step 10 (optional): adjust the .gitignores")]),e._v(" "),s("h4",{attrs:{id:"add-the-following-to-functions-gitignore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-the-following-to-functions-gitignore"}},[e._v("#")]),e._v(" add the following to functions/.gitignore")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(".vuesion/\ndist/\ni18n/\n")])])]),s("h4",{attrs:{id:"add-the-following-to-gitignore"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-the-following-to-gitignore"}},[e._v("#")]),e._v(" add the following to .gitignore")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(".firebase/\nfirebase-debug.log\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);